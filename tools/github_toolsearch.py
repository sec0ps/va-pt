# Author: Keith Pachulski
# Company: Red Cell Security, LLC
# Email: keith@redcellsecurity.org
# Website: www.redcellsecurity.org
#
# Copyright (c) 2025 Keith Pachulski. All rights reserved.
#
# License: This software is licensed under the MIT License.
#          You are free to use, modify, and distribute this software
#          in accordance with the terms of the license.

import requests
from datetime import datetime, timedelta
import webbrowser
import json
import os
import subprocess
import sys

# Function to install missing packages
def install_package(package):
    subprocess.check_call([sys.executable, "-m", "pip", "install", package])

# Check if 'requests' is installed
try:
    import requests
except ImportError:
    install_package("requests")

# Check if Firefox is installed
firefox_installed = subprocess.run(["which", "firefox"], stdout=subprocess.PIPE).stdout.strip()
if not firefox_installed:
    print("Firefox is not installed. Installing Firefox...")
    subprocess.run(["sudo", "apt-get", "update"])
    subprocess.run(["sudo", "apt-get", "install", "-y", "firefox"])

# GitHub API endpoint
GITHUB_API_URL = "https://api.github.com/search/repositories"

# Date range - last 30 days
thirty_days_ago = (datetime.now() - timedelta(days=30)).strftime('%Y-%m-%d')

# File to keep track of reported repositories
reported_repos_file = "reported_repos.json"

# Load reported repositories if the file exists
if os.path.exists(reported_repos_file):
    with open(reported_repos_file, 'r') as file:
        reported_repos = json.load(file)
else:
    reported_repos = []

# Query parameters
params = {
    'q': f'security created:>{thirty_days_ago}',
    'sort': 'created',
    'order': 'desc',
    'per_page': 100  # Adjust the number of results per page as needed
}

# Make the API request
response = requests.get(GITHUB_API_URL, params=params)

# HTML file to save the output
html_filename = os.path.abspath("new_security_tools.html")

if response.status_code == 200:
    data = response.json()

    # Start creating the HTML content
    html_content = """
    <html>
    <head><title>New Security Tools from GitHub</title>
    <style>
        body {
            background-image: url('https://static.wixstatic.com/media/488c5b_8bd517d20d2b446e906385dec6bf1898%7Emv2.jpg/v1/fit/w_2500,h_1330,al_c/488c5b_8bd517d20d2b446e906385dec6bf1898%7Emv2.jpg');
            background-size: 50%;
            background-position: center;
            background-repeat: no-repeat;
            background-attachment: fixed;
        }
        .content {
            position: relative;
            z-index: 1;
        }
        .background-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.2);
            z-index: 0;
        }
        footer {
            text-align: center;
            margin-top: 20px;
            font-size: 14px;
        }
        a {
            target: _blank;
        }
    </style>
    </head>
    <body>
    <div class="background-overlay"></div>
    <div class="content">
    <h1>New Security Tools Published in the Last 30 Days</h1>
    <ul>
    """

    new_repos = []

    for repo in data.get('items', []):
        if repo['id'] not in reported_repos:
            html_content += f"""
            <li>
                <strong>Name:</strong> {repo['name']}<br>
                <strong>Description:</strong> {repo.get('description', 'No description available.')}<br>
                <strong>Created At:</strong> {repo['created_at']}<br>
                <strong>Repository URL:</strong> <a href='{repo['html_url']}' target='_blank'>{repo['html_url']}</a><br>
                <strong>Git URL:</strong> <a href='{repo['git_url']}' target='_blank'>{repo['git_url']}</a><br>
            </li>
            <hr>
            """
            new_repos.append(repo['id'])

    # Close HTML tags and add footer
    html_content += """
    </ul>
    <footer>
        <p>Github Security Tools Search generated by Red Cell Security, LLC | <a href='https://www.redcellsecurity.org' target='_blank'>www.redcellsecurity.org</a><br>
        Keith Pachulski | <a href='mailto:keith@redcellsecurity.org'>keith@redcellsecurity.org</a></p>
    </footer>
    </div>
    </body>
    </html>
    """

    # Write the HTML content to a file
    with open(html_filename, 'w') as file:
        file.write(html_content)

    # Update the reported repositories list
    reported_repos.extend(new_repos)
    with open(reported_repos_file, 'w') as file:
        json.dump(reported_repos, file)

    # Open the generated HTML file in Firefox
    subprocess.run(["firefox", html_filename])

else:
    print(f"Failed to fetch data: {response.status_code}")
